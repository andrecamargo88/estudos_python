Curso em video - Python 

-> Primeiros comandos:
    - () --> Funções sempre dentro de parenteses;
    - ''ou "" --> mensagens dentro de aspas;
    - {} --> para se referir a uma função dentro de uma funcão -- ver ex002 curso em video;
    - [] --> para tabelas e listas;
    - = --> receba;


-> Formatação de string:
    - {:.2f} --> define numero decimal após a virgula
    - {:ˆ} --> Centraliza Texto na string  {{{ print('{:=^40}'.format(' TEXTO ')) }}}
    - {:=ˆ40} --> Centraliza Texto na string com '=' e em 40 espaços.
    - \n --> quebra linha;
    - end=' ' --> mantem na mesma linha a resposta;
    - end=''--> para editar o final de uma string (ver ex042)


-> Primeiras funções:
    - print --> escreva , imprimir texto;
    - input --> leia , salvar informaçao;
    - soma --> somar numeros inteiros dentro de uma mensagem;
    -

-> Tipos primitivos:
    - int   --> numeros interiros (1; 3; 0; -5; 1342...)
    - float --> numeros fracionados (4.5; 0.075; 7.0)
    - bool  --> (True; False)
    - str   --> texto ou mensagem ('Olá'; '7.5'; ' ')

OBS.: * para ver qual tipo primitivo é a resposta --> print(type(n))
      * print(n.is...) para obter informações sobre o texto (ver ex004)


-> Operadores aritiméticos
    - Adição (+)           --> 5  + 2 = 7
    - Subtração (-)        --> 5  - 2 = 3
    - Multiplicação (*)    --> 5  * 2 = 10
    - Divisão (/)          --> 5  / 2 = 2.5 (float)
    - Potencia (**)        --> 5 ** 2 = 25   ---> outra forma : pow(a,b)
    - Divisão inteira (//) --> 5 // 2 = 2 
    - Resto da divisão (%) --> 5  % 2 = 1

    * Ordem de prescedencia : 1 -- ()
                              2 -- **
                              3 -- * ; / ; // ; %
                              4 -- + ; -



-> AULA 08 - Módulos (ex. 16 - 21)

    - import
    - from BIBLIOTECA import ITEM
    
    - python.org --> site para verificar as bibliotecas ---> DOCS : lista por topicos 
                                                        ---> PYPI : pacotes extras


-> AULA 10 - Condições (ex 28 - 35)

    - if:                      if = estrutura simple
	Bloco True
    - else:                    if/else = estrutura composta
	Bloco False


-> AULA 11 - Cores

    --> ANSI => escape sequence
    - \033[m
    - \033[0;33;44m. {style; text; back}

    --> style: 		    text			back
			    null  branco ->	null
	0 -> none            30 -> preto -> 	40
	1 -> bold 	    31 -> vermelho -> 	41
	4 -> underline	    32 -> verde -> 	42
	7 -> negativo	    33 -> amarelo -> 	43
			    34 -> azul -> 	44
			    35 -> roxo -> 	45
			    36 -> ciano -> 	46
			    37 -> cinza -> 	47


-> AULA 12 - Condições Aninhadas (ex. 36 - 45)

    - if carro.esquerda():
	bloco 01
    - elif carro.direita():  	=> elif = else + if.  --> pode ser usado mais de 1 vez.
	bloco 02
    - else:     ('carro.reto')
	bloco 03


-> AULA 13 - Estrutura de Repetição FOR (ex 46 - 56)

    - for c in range(i, f+1, p):   --> i - início
    - 	print(c)			--> f - final (contagem começa no zero)
				--> p - passo



-> AULA 14 - Estrutura de Repetição WHILE (ex 57 - 71)
    - n = 1
    - while n != 0:
        n = int(input('Digite um valor: '))
    - print('FIM')

    - sex = str(input('Qual seu sexo? ')).strip().upper()[0]
    - while sex not in 'MmFf':
     	sex = str(input('DADOS INVÁLIDOS! Por favor, informe seu sexo: ')).strip().upper()[0]
    - print('Sexo {} registrado com sucesso!'.format(sexo))


